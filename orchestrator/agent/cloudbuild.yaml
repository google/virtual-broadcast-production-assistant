steps:
  # 0. Download environment file from GCS
  - name: 'gcr.io/cloud-builders/gsutil'
    args:
      - 'cp'
      - 'gs://${_GCS_ENV_BUCKET}/agent/.env.prod'
      - '.env'
    dir: 'orchestrator/agent'

  # 1. Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$COMMIT_SHA'
      - '.'
    dir: 'orchestrator/agent'

  # 2. Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$COMMIT_SHA'
    dir: 'orchestrator/agent'

  # 3. Create Cloud Deploy release
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: gcloud
    args:
      - 'deploy'
      - 'releases'
      - 'create'
      - 'release-${SHORT_SHA}'
      - '--delivery-pipeline'
      - '${_SERVICE_NAME}-pipeline'
      - '--region'
      - '${_REGION}'
      - '--source'
      - '.'
      - '--skaffold-file'
      - 'skaffold.yaml'
      - '--images'
      - '${_SERVICE_NAME}=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$COMMIT_SHA'
    dir: 'orchestrator/agent'

# Define images to be pushed to Artifact Registry
images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$COMMIT_SHA'


# Cloud Build options
options:
  logging: CLOUD_LOGGING_ONLY

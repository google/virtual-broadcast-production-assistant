steps:
  # 1. Install dependencies
  - name: 'python:3.11'
    entrypoint: 'pip'
    args: ['install', '-r', 'orchestrator/agent-health-checker/requirements.txt']
    dir: 'orchestrator/agent-health-checker'

  # 2. Lint with pylint
  - name: 'python:3.11'
    entrypoint: 'pylint'
    args:
      - '--rcfile=orchestrator/agent-health-checker/.pylintrc'
      - 'orchestrator/agent-health-checker/main.py'
      - 'orchestrator/agent-health-checker/test_main.py'

  # 3. Run unit tests
  - name: 'python:3.11'
    entrypoint: 'pytest'
    args: ['orchestrator/agent-health-checker/test_main.py']

  # 4. Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$COMMIT_SHA'
      - '.'
    dir: 'orchestrator/agent-health-checker'

  # 5. Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$COMMIT_SHA'
    dir: 'orchestrator/agent-health-checker'

  # 6. Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--service-account'
      - 'agent-health-checker-sa@$PROJECT_ID.iam.gserviceaccount.com'
      - '--no-allow-unauthenticated'
    dir: 'orchestrator/agent-health-checker'

# Define images to be pushed to Artifact Registry
images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$COMMIT_SHA'


# Cloud Build options
options:
  logging: CLOUD_LOGGING_ONLY
